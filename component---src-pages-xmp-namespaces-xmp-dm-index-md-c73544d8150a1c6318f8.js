(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{kuAh:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return i}));var n=a("wx14"),r=a("zLVn"),d=(a("q1tI"),a("7ljp")),m=a("ndZU"),l=(a("qKvR"),{}),c={_frontmatter:l},b=m.a;function i(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(d.mdx)(b,Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(d.mdx)("h1",{id:"xmp-dynamic-media-namespace"},"XMP Dynamic Media namespace"),Object(d.mdx)("p",null,"This namespace specifies properties used by the Adobe dynamic media group."),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("p",{parentName:"li"},"The namespace URI is ",Object(d.mdx)("a",Object(n.a)({parentName:"p"},{href:"http://ns.adobe.com/xmp/1.0/DynamicMedia/"}),"http://ns.adobe.com/xmp/1.0/DynamicMedia/"))),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("p",{parentName:"li"},"The preferred namespace prefix is xmpDM"))),Object(d.mdx)("table",null,Object(d.mdx)("thead",{parentName:"table"},Object(d.mdx)("tr",{parentName:"thead"},Object(d.mdx)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(d.mdx)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(d.mdx)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(d.mdx)("tbody",{parentName:"table"},Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:absPeakAudioFilePath"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The absolute path to the file’s peak audio file. If empty, no peak file exists."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#uri"}),"URI"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:album"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the album."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:altTapeName"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"An alternative tape name, set via the project window or timecode dialog in Premiere. If an alternative name has been set and has not been reverted, that name is displayed."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:altTimecode"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"A timecode set by the user. When specified, it is used instead of the startTimecode."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Timecode.md"}),"Timecode"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:artist"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the artist or artists."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:audioChannelType"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The audio channel type. One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"Mono"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"Stereo"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"5.1"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"7.1"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"16 Channel"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"Other")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:audioCompressor"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The audio compression used. For example, MP3."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:audioSampleRate"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The audio sample rate. Can be any value, but commonly 32000, 44100, or 48000."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#integer"}),"Integer"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:audioSampleType"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The audio sample type. One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"8Int"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"16Int"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"24Int"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"32Int"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"32Float"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"Compressed"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"Packed"),",",Object(d.mdx)("inlineCode",{parentName:"td"},"Other")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:beatSpliceParams"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Additional parameters for Beat Splice stretch mode."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/beatSpliceStretch.md"}),"beatSpliceStretch"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:cameraAngle"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The orientation of the camera to the subject in a static shot, from a fixed set of industry standard terminology. Predefined values include: ",Object(d.mdx)("inlineCode",{parentName:"td"},"Low Angle")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Eye Level")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"High Angle")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Overhead Shot")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Birds Eye Shot")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Dutch Angle")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"POV")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Over the Shoulder")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Reaction Shot")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Open Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:cameraLabel"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),'A description of the camera used for a shoot. Can be any string, but is usually simply a number, for example "1", "2", or more explicitly "Camera 1"'),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:cameraModel"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The make and model of the camera used for a shoot."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:cameraMove"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The movement of the camera during the shot, from a fixed set of industry standard terminology. Predefined values include:",Object(d.mdx)("inlineCode",{parentName:"td"},"Aerial")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Boom Up")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Boom Down")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Crane Up")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Crane Down")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Dolly In")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Dolly Out")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Pan Left")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Pan Right")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Pedestal Up")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Pedestal Down")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Tilt Up")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Tilt Down")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Tracking")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Truck Left")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Truck Right")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Zoom In")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Zoom Out")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Open Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:client"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The client for the job of which this shot or take is a part."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:comment"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"A user’s comments."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:composer"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The composer’s name."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:contributedMedia"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"An unordered list of all media used to create this media."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Unordered array of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Media.md"}),"Media"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:director"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The director of the scene."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:directorPhotography"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The director of photography for the scene."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:duration"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The duration of the media file."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Time.md"}),"Time"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:engineer"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The engineer’s name."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:fileDataRate"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),'The file data rate in megabytes per second. For example:"36/10" = 3.6 MB/sec'),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#rational"}),"Rational"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:genre"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the genre."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:good"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"A checkbox for tracking whether a shot is a keeper."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#boolean"}),"Boolean"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:instrument"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The musical instrument."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:introTime"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The duration of lead time for queuing music."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Time.md"}),"Time"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:key"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The audio’s musical key. One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"C"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"C#"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"D"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"D#"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"E"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"F"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"F#"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"G"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"G#"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"A"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"A#"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"B")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:logComment"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"User’s log comments."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:loop"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"When true, the clip can be looped seamlessly."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#boolean"}),"Boolean"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:numberOfBeats"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The total number of musical beats in a clip; for example, the beats-per-second times the duration in seconds."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#real"}),"Real"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:markers"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"An ordered list of markers. See also ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Track.md"}),"xmpDM:Tracks"),"."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Ordered array of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Marker.md"}),"Marker"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:outCue"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The time at which to fade out."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Time.md"}),"Time"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:projectName"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the project of which this file is a part."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:projectRef"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"A reference to the project of which this file is a part."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/ProjectLink.md"}),"ProjectLink"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:pullDown"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The sampling phase of film to be converted to video (pull-down). One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"WSSWW")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"SSWWW")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"SWWWS")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"WWWSS")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"WWSSW")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"WWWSW")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"WWSWW")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"WSWWW")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"SWWWW")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"WWWWS")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:relativePeakAudioFilePath"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The relative path to the file’s peak audio file. If empty, no peak file exists."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#uri"}),"URI"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:relativeTimestamp"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The start time of the media inside the audio project."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Time.md"}),"Time"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:releaseDate"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The date the title was released."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#date"}),"Date"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:resampleParams"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Additional parameters for Resample stretch mode."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/resampleStretch.md"}),"resampleStretch"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:scaleType"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The musical scale used in the music. One of: ",Object(d.mdx)("inlineCode",{parentName:"td"},"Major"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"Minor"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"Both"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"Neither"),". Neither is most often used for instruments with no associated scale, such as drums."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:scene"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the scene."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:shotDate"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The date and time when the video was shot."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#date"}),"Date"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:shotDay"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The day in a multiday shoot. For example: Day 2, Friday."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:shotLocation"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),'The name of the location where the video was shot. For example: "Oktoberfest, Munich Germany". For more accurate positioning, use the Exif GPS values.'),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:shotName"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the shot or take."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:shotNumber"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The position of the shot in a script or production, relative to other shots. For example: 1, 2, 1a, 1b, 1.1, 1.2."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:shotSize"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The size or scale of the shot framing, from a fixed set of industry standard terminology. Predefined values include:",Object(d.mdx)("inlineCode",{parentName:"td"},"ECU --extreme close-up ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"MCU -- medium close-up ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"CU -- close-up ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"MS -- medium shot ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"WS -- wide shot ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"MWS -- medium wide shot ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"EWS -- extreme wide shot")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Open Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:speakerPlacement"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"A description of the speaker angles from centre front in degrees. For example: “Left = -30, Right = 30, Centre = 0, LFE = 45, Left Surround = -110, Right Surround = 110”"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:startTimecode"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The timecode of the first frame of video in the file, as obtained from the device control."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Timecode.md"}),"Timecode"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:stretchMode"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The audio stretch mode. One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"Fixed length, ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Time-Scale ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Resample ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Beat Splice  ")," , ",Object(d.mdx)("inlineCode",{parentName:"td"},"Hybrid")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:takeNumber"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"A numeric value indicating the absolute number of a take."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#integer"}),"Integer"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:tapeName"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the tape from which the clip was captured, as set during the capture process."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:tempo"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The audio’s tempo."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#real"}),"Real"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:timeScaleParams"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Additional parameters for Time-Scale stretch mode."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/timeScaleStretch.md"}),"timeScaleStretch"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:timeSignature"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The time signature of the music. One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"2/4"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"3/4"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"4/4"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"5/4"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"7/4"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"6/8"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"9/8"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"12/8"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"other")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:trackNumber"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"A numeric value indicating the order of the audio file within its original recording."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#integer"}),"Integer"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:Tracks"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"An unordered list of tracks. A track is a named set of markers, which can specify a frame rate for all markers in the set.See also ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Marker.md"}),"xmpDM:markers"),"."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Unordered array of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Track.md"}),"Track"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoAlphaMode"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The alpha mode. One of: straight, pre-multiplied , or none"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoAlphaPremultipleColor"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"A colour in CMYK or RGB to be used as the premultiple colour when alpha mode is premultiplied."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Colorants.md"}),"Colorants"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoAlphaUnityIsTransparent"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"When true, unity is clear, when false, it is opaque."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#boolean"}),"Boolean"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoColorSpace"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The colour space. One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"sRGB (used by Photoshop)"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"CCIR-601 (used for NTSC)"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"CCIR-709 (used for HD)")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoCompressor"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Video compression used. For example, jpeg."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoFieldOrder"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The field order for video. One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"Upper"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"Lower"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"Progressive")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoFrameRate"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The video frame rate. Predefined values include:",Object(d.mdx)("inlineCode",{parentName:"td"},"24"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"NTSC"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"PAL")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Open Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoFrameSize"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The frame size. For example: w:720, h: 480, unit:pixels"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/Dimensions.md"}),"Dimensions"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoPixelAspectRatio"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The aspect ratio, expressed as wd/ht. For example: “648/720” = 0.9"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#rational"}),"Rational"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:videoPixelDepth"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"The size in bits of each colour component of a pixel. Standard Windows 32-bit pixels have 8 bits per component. One of:",Object(d.mdx)("inlineCode",{parentName:"td"},"8Int"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"16Int"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"24Int"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"32Int"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"32Float"),", ",Object(d.mdx)("inlineCode",{parentName:"td"},"Other")),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Closed Choice of ",Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:partOfCompilation"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Part of compilation."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#boolean"}),"Boolean"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:lyrics"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"Lyrics text. No association with timecode."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))),Object(d.mdx)("tr",{parentName:"tbody"},Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"xmpDM:discNumber"),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),"If in a multi-disc set, might contain total number of discs. For example: 2/3."),Object(d.mdx)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(d.mdx)("a",Object(n.a)({parentName:"td"},{href:"./XMPDataTypes/CoreProperties.md#text"}),"Text"))))))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-xmp-namespaces-xmp-dm-index-md-c73544d8150a1c6318f8.js.map